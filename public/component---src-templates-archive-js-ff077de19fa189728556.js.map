{"version":3,"sources":["webpack:///./src/components/PostCategories.js","webpack:///./src/components/PostPreview.js","webpack:///./src/components/ArchivePagination.js","webpack:///./src/templates/archive.js"],"names":["PostCategories","categories","nodes","className","map","category","index","to","uri","key","rel","name","PostPreview","post","isLast","databaseId","id","FeaturedMedia","image","featuredImage","dangerouslySetInnerHTML","__html","title","excerpt","ArchivePagination","hasPreviousPage","hasNextPage","currentPage","pageCount","archivePath","aria-hidden","role","aria-label","previousLink","renderPreviousLink","pageNumber","page","isCurrent","isFirst","tag","children","Link","dots","elementsToRender","i","push","Tag","props","renderPagesInBetween","renderNextLink","Archive","data","allWpPost","pageInfo","pageContext","archiveType","Layout","bodyClass","Seo","description","length"],"mappings":"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","file":"component---src-templates-archive-js-ff077de19fa189728556.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst PostCategories = ({ categories }) => {\r\n  if (!categories?.nodes || categories.nodes === 0) return null\r\n\r\n  return (\r\n    <div className=\"entry-categories\">\r\n      <span className=\"screen-reader-text\">Categories</span>\r\n      <div className=\"entry-categories-inner\">\r\n        {categories.nodes.map((category, index) => (\r\n          <Link to={category.uri} key={index} rel=\"category tag\">\r\n            {category.name}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostCategories\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PostCategories from \"./PostCategories\"\r\nimport FeaturedMedia from \"./FeaturedMedia\"\r\n\r\nconst PostPreview = ({ post, isLast }) => {\r\n  return (\r\n    <>\r\n      <article\r\n        className={`post-${post.databaseId} post type-post status-publish format-standard has-post-thumbnail hentry category-uncategorized article-post`}\r\n        id={`post-${post.databaseId}`}\r\n      >\r\n        <div className={'article-single-post'}>\r\n        <Link to={post.uri}>\r\n        <FeaturedMedia image={post.featuredImage} />\r\n        </Link>\r\n        <header className=\"entry-header\">\r\n          <div className=\"entry-header-inner section-inner medium\">\r\n            <PostCategories categories={post.categories} />\r\n            <h2 className=\"entry-title heading-size-1 archive-post-title\">\r\n              <Link\r\n                to={post.uri}\r\n                dangerouslySetInnerHTML={{ __html: post.title }}\r\n              />\r\n            </h2>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"post-inner thin \">\r\n          <div className=\"entry-content\">\r\n            <div dangerouslySetInnerHTML={{ __html: post.excerpt }} />\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </article>\r\n\r\n      {/* {!isLast && (\r\n        <hr\r\n          key={post.postId + \"-hr\"}\r\n          className=\"post-separator styled-separator is-style-wide section-inner\"\r\n          aria-hidden=\"true\"\r\n        />\r\n      )} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostPreview\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst renderPreviousLink = ({ hasPreviousPage, currentPage, archivePath }) => {\r\n  let previousLink = null\r\n\r\n  if (2 === currentPage) {\r\n    previousLink = archivePath\r\n  } else if (2 < currentPage) {\r\n    previousLink = `${archivePath}page/${currentPage - 1}`\r\n  }\r\n\r\n  if (hasPreviousPage) {\r\n    return (\r\n      <Link className={\"prev page-numbers\"} to={previousLink}>\r\n        <span aria-hidden=\"true\">←</span>\r\n        <span className=\"nav-prev-text\">\r\n          Newer <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n      </Link>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className={\"prev page-numbers placeholder\"} aria-hidden=\"true\">\r\n        <span aria-hidden=\"true\">←</span>\r\n        <span className=\"nav-prev-text\">\r\n          Newer <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst renderNextLink = ({ hasNextPage, currentPage, archivePath }) => {\r\n  if (hasNextPage) {\r\n    return (\r\n      <Link\r\n        className={\"next page-numbers\"}\r\n        to={`${archivePath}page/${currentPage + 1}`}\r\n      >\r\n        <span className=\"nav-next-text\">\r\n          Older <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n        {\"->\"}\r\n      </Link>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className={\"next page-numbers placeholder\"} aria-hidden=\"true\">\r\n        <span className=\"nav-next-text\">\r\n          Older <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n        {\"->\"}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst renderPagesInBetween = ({ currentPage, pageCount, archivePath }) => {\r\n  const pageNumber = (page, isCurrent, isFirst) => {\r\n    if (isCurrent) {\r\n      return {\r\n        tag: \"span\",\r\n        children: page,\r\n        className: \"page-numbers\",\r\n      }\r\n    }\r\n\r\n    const to = isFirst ? archivePath : `${archivePath}page/${page}`\r\n\r\n    return {\r\n      tag: Link,\r\n      children: page,\r\n      to: to,\r\n    }\r\n  }\r\n\r\n  const dots = {\r\n    tag: \"span\",\r\n    children: \"…\",\r\n    className: \"page-numbers dots\",\r\n  }\r\n\r\n  let elementsToRender = []\r\n\r\n  if (pageCount > 5) {\r\n    // current is 1 - 3: show all on left side and dots for right\r\n    if (currentPage < 4) {\r\n      for (let i = 1; i <= currentPage + 1; i++) {\r\n        elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n      }\r\n      elementsToRender.push(dots) // dots in between\r\n      elementsToRender.push(pageNumber(pageCount, false, false)) // last page\r\n    }\r\n    // if on of the last 3\r\n    else if (currentPage >= pageCount - 2) {\r\n      elementsToRender.push(pageNumber(1, false, true)) // last page\r\n      elementsToRender.push(dots)\r\n\r\n      for (let i = currentPage - 1; i < pageCount + 1; i++) {\r\n        elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n      }\r\n    } else {\r\n      elementsToRender.push(pageNumber(1, false, true)) // last page\r\n      elementsToRender.push(dots)\r\n\r\n      for (let i = currentPage - 1; i <= currentPage + 1; i++) {\r\n        elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n      }\r\n\r\n      elementsToRender.push(dots)\r\n      elementsToRender.push(pageNumber(pageCount, false, false)) // last page\r\n    }\r\n  } else {\r\n    for (let i = 1; i < pageCount + 1; i++) {\r\n      elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n    }\r\n  }\r\n\r\n  return elementsToRender.map(({ tag: Tag, children, ...props }, index) => (\r\n    <Tag key={index} {...props}>\r\n      {children}\r\n    </Tag>\r\n  ))\r\n}\r\n\r\nconst ArchivePagination = ({\r\n  hasPreviousPage,\r\n  hasNextPage,\r\n  currentPage,\r\n  pageCount,\r\n  archivePath,\r\n}) => {\r\n  if (pageCount <= 1) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination-wrapper section-inner\">\r\n      <hr\r\n        className=\"styled-separator pagination-separator is-style-wide\"\r\n        aria-hidden=\"true\"\r\n      />\r\n\r\n      <nav\r\n        className=\"navigation pagination\"\r\n        role=\"navigation\"\r\n        aria-label=\"Posts\"\r\n      >\r\n        <h2 className=\"screen-reader-text\">Posts navigation</h2>\r\n        <div className=\"nav-links\">\r\n          {renderPreviousLink({ hasPreviousPage, currentPage, archivePath })}\r\n          {renderPagesInBetween({ currentPage, pageCount, archivePath })}\r\n          {renderNextLink({ hasNextPage, currentPage, archivePath })}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArchivePagination\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n// import PostEntry from \"../../components/post-entry\"\r\nimport Layout from \"../components/Layout\"\r\nimport Seo from \"../components/Seo\"\r\n// import SEO from \"../../components/seo\"\r\n// import NextIcon from \"../../components/icons/next\"\r\n// import PreviousIcon from \"../../components/icons/previous\"\r\nimport PostPreview from \"../components/PostPreview\"\r\nimport ArchivePagination from \"../components/ArchivePagination\"\r\n\r\nconst Archive = (props) => {\r\n  const {\r\n    data: {\r\n      allWpPost: { nodes, pageInfo },\r\n    },\r\n    pageContext: { archiveType, archivePath },\r\n  } = props\r\n\r\n  return (\r\n    <Layout bodyClass=\"home blog wp-embed-responsive has-no-pagination showing-comments hide-avatars footer-top-visible customize-support\">\r\n      <Seo title=\"Home\" description=\"Welcome to the Twenty Nineteen Theme.\" />\r\n      <div className=\"column-blog\">\r\n        {nodes &&\r\n          nodes.map((post, index) => {\r\n            return (\r\n              <PostPreview\r\n                key={index}\r\n                post={post}\r\n                isLast={index === nodes.length - 1}\r\n              />\r\n            )\r\n          })}\r\n      </div>\r\n      <ArchivePagination {...pageInfo} archivePath={archivePath} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ArchivePage(\r\n    $offset: Int!\r\n    $perPage: Int!\r\n    $userDatabaseId: Int\r\n    $categoryDatabaseId: Int\r\n  ) {\r\n    allWpPost(\r\n      limit: $perPage\r\n      skip: $offset\r\n      filter: {\r\n        author: { node: { databaseId: { eq: $userDatabaseId } } }\r\n        categories: {\r\n          nodes: { elemMatch: { databaseId: { eq: $categoryDatabaseId } } }\r\n        }\r\n      }\r\n      sort: { fields: date, order: DESC }\r\n    ) {\r\n      nodes {\r\n        ...PostPreviewContent\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n        hasPreviousPage\r\n        currentPage\r\n        pageCount\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Archive\r\n"],"sourceRoot":""}