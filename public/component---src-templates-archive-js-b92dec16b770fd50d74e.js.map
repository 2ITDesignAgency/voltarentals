{"version":3,"file":"component---src-templates-archive-js-b92dec16b770fd50d74e.js","mappings":"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","sources":["webpack://Volta4you/./src/components/PostPreview.js","webpack://Volta4you/./src/components/ArchivePagination.js","webpack://Volta4you/./src/templates/archive.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PostCategories from \"./PostCategories\"\r\nimport FeaturedMedia from \"./FeaturedMedia\"\r\nimport { Button } from \"reactstrap\"\r\nimport \"../components/homepageelements/hompageBootstrap.scss\"\r\nconst PostPreview = ({ post, isLast }) => {\r\n  return (\r\n    <>\r\n      <article\r\n        className={`post-${post.databaseId} post type-post status-publish format-standard has-post-thumbnail hentry category-uncategorized article-post`}\r\n        id={`post-${post.databaseId}`}\r\n      >\r\n        <div className={\"article-single-post\"}>\r\n          <Link to={post.uri}>\r\n            <FeaturedMedia image={post.featuredImage} />\r\n          </Link>\r\n          <header className=\"entry-header\">\r\n            <div className=\"entry-header-inner section-inner medium\">\r\n              <PostCategories categories={post.categories} />\r\n              <h2 className=\"entry-title heading-size-1 archive-post-title\">\r\n                <Link\r\n                  to={post.uri}\r\n                  dangerouslySetInnerHTML={{ __html: post.title }}\r\n                />\r\n              </h2>\r\n            </div>\r\n          </header>\r\n\r\n          <div className=\"post-inner thin \">\r\n            <div className=\"entry-content archive-post\">\r\n              <div\r\n                dangerouslySetInnerHTML={{ __html: post.excerpt }}\r\n                className=\"card-text\"\r\n              />\r\n            </div>\r\n            <Button color=\"btn btn-success btn-block mb-4\">\r\n              <Link to={post.uri} className=\"readMore\">\r\n                Read more\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </article>\r\n\r\n      {/* {!isLast && (\r\n        <hr\r\n          key={post.postId + \"-hr\"}\r\n          className=\"post-separator styled-separator is-style-wide section-inner\"\r\n          aria-hidden=\"true\"\r\n        />\r\n      )} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostPreview\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst renderPreviousLink = ({ hasPreviousPage, currentPage, archivePath }) => {\r\n  let previousLink = null\r\n\r\n  if (2 === currentPage) {\r\n    previousLink = archivePath\r\n  } else if (2 < currentPage) {\r\n    previousLink = `${archivePath}page/${currentPage - 1}`\r\n  }\r\n\r\n  if (hasPreviousPage) {\r\n    return (\r\n      <Link className={\"prev page-numbers\"} to={previousLink}>\r\n        <span aria-hidden=\"true\">←</span>\r\n        <span className=\"nav-prev-text\">\r\n          Newer <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n      </Link>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className={\"prev page-numbers placeholder\"} aria-hidden=\"true\">\r\n        <span aria-hidden=\"true\">←</span>\r\n        <span className=\"nav-prev-text\">\r\n          Newer <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst renderNextLink = ({ hasNextPage, currentPage, archivePath }) => {\r\n  if (hasNextPage) {\r\n    return (\r\n      <Link\r\n        className={\"next page-numbers\"}\r\n        to={`${archivePath}page/${currentPage + 1}`}\r\n      >\r\n        <span className=\"nav-next-text\">\r\n          Older <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n        {\"->\"}\r\n      </Link>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className={\"next page-numbers placeholder\"} aria-hidden=\"true\">\r\n        <span className=\"nav-next-text\">\r\n          Older <span className=\"nav-short\">Posts</span>\r\n        </span>\r\n        {\"->\"}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst renderPagesInBetween = ({ currentPage, pageCount, archivePath }) => {\r\n  const pageNumber = (page, isCurrent, isFirst) => {\r\n    if (isCurrent) {\r\n      return {\r\n        tag: \"span\",\r\n        children: page,\r\n        className: \"page-numbers\",\r\n      }\r\n    }\r\n\r\n    const to = isFirst ? archivePath : `${archivePath}page/${page}`\r\n\r\n    return {\r\n      tag: Link,\r\n      children: page,\r\n      to: to,\r\n    }\r\n  }\r\n\r\n  const dots = {\r\n    tag: \"span\",\r\n    children: \"…\",\r\n    className: \"page-numbers dots\",\r\n  }\r\n\r\n  let elementsToRender = []\r\n\r\n  if (pageCount > 5) {\r\n    // current is 1 - 3: show all on left side and dots for right\r\n    if (currentPage < 4) {\r\n      for (let i = 1; i <= currentPage + 1; i++) {\r\n        elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n      }\r\n      elementsToRender.push(dots) // dots in between\r\n      elementsToRender.push(pageNumber(pageCount, false, false)) // last page\r\n    }\r\n    // if on of the last 3\r\n    else if (currentPage >= pageCount - 2) {\r\n      elementsToRender.push(pageNumber(1, false, true)) // last page\r\n      elementsToRender.push(dots)\r\n\r\n      for (let i = currentPage - 1; i < pageCount + 1; i++) {\r\n        elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n      }\r\n    } else {\r\n      elementsToRender.push(pageNumber(1, false, true)) // last page\r\n      elementsToRender.push(dots)\r\n\r\n      for (let i = currentPage - 1; i <= currentPage + 1; i++) {\r\n        elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n      }\r\n\r\n      elementsToRender.push(dots)\r\n      elementsToRender.push(pageNumber(pageCount, false, false)) // last page\r\n    }\r\n  } else {\r\n    for (let i = 1; i < pageCount + 1; i++) {\r\n      elementsToRender.push(pageNumber(i, currentPage === i, i === 1))\r\n    }\r\n  }\r\n\r\n  return elementsToRender.map(({ tag: Tag, children, ...props }, index) => (\r\n    <Tag key={index} {...props}>\r\n      {children}\r\n    </Tag>\r\n  ))\r\n}\r\n\r\nconst ArchivePagination = ({\r\n  hasPreviousPage,\r\n  hasNextPage,\r\n  currentPage,\r\n  pageCount,\r\n  archivePath,\r\n}) => {\r\n  if (pageCount <= 1) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination-wrapper section-inner\">\r\n      <hr\r\n        className=\"styled-separator pagination-separator is-style-wide\"\r\n        aria-hidden=\"true\"\r\n      />\r\n\r\n      <nav\r\n        className=\"navigation pagination\"\r\n        role=\"navigation\"\r\n        aria-label=\"Posts\"\r\n      >\r\n        <h2 className=\"screen-reader-text\">Posts navigation</h2>\r\n        <div className=\"nav-links\">\r\n          {renderPreviousLink({ hasPreviousPage, currentPage, archivePath })}\r\n          {renderPagesInBetween({ currentPage, pageCount, archivePath })}\r\n          {renderNextLink({ hasNextPage, currentPage, archivePath })}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArchivePagination\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\nimport Seo from \"../components/Seo\"\r\nimport PostPreview from \"../components/PostPreview\"\r\nimport ArchivePagination from \"../components/ArchivePagination\"\r\nimport {\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\"\r\nconst Archive = (props) => {\r\n  const {\r\n    data: {\r\n      allWpPost: { nodes, pageInfo },\r\n    },\r\n    pageContext: { archiveType, archivePath },\r\n  } = props\r\n\r\n  return (\r\n    <Layout bodyClass=\"home blog wp-embed-responsive has-no-pagination showing-comments hide-avatars footer-top-visible customize-support\">\r\n      <Seo title=\"Home\" description=\"Welcome to volta4u\" />\r\n      <Container>\r\n      <Row>\r\n        {nodes &&\r\n          nodes.map((post, index) => {\r\n            return (\r\n              <PostPreview\r\n                key={index}\r\n                post={post}\r\n                isLast={index === nodes.length - 1}\r\n              />\r\n            )\r\n          })}\r\n      </Row>\r\n      <ArchivePagination {...pageInfo} archivePath={archivePath} />\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ArchivePage(\r\n    $offset: Int!\r\n    $perPage: Int!\r\n    $userDatabaseId: Int\r\n    $categoryDatabaseId: Int\r\n  ) {\r\n    allWpPost(\r\n      limit: $perPage\r\n      skip: $offset\r\n      filter: {\r\n        author: { node: { databaseId: { eq: $userDatabaseId } } }\r\n        categories: {\r\n          nodes: { elemMatch: { databaseId: { eq: $categoryDatabaseId } } }\r\n        }\r\n      }\r\n      sort: { fields: date, order: DESC }\r\n    ) {\r\n      nodes {\r\n        ...PostPreviewContent\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n        hasPreviousPage\r\n        currentPage\r\n        pageCount\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Archive\r\n"],"names":["post","isLast","className","databaseId","id","Link","to","uri","FeaturedMedia","image","featuredImage","PostCategories","categories","dangerouslySetInnerHTML","__html","title","excerpt","Button","color","hasPreviousPage","hasNextPage","currentPage","pageCount","archivePath","role","previousLink","renderPreviousLink","pageNumber","page","isCurrent","isFirst","tag","children","dots","elementsToRender","i","push","map","index","Tag","props","key","renderPagesInBetween","renderNextLink","data","allWpPost","nodes","pageInfo","pageContext","archiveType","Layout","bodyClass","Seo","description","Container","Row","length"],"sourceRoot":""}